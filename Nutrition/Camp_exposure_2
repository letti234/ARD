var dhs = ee.FeatureCollection("users/salem043/ARD/COMBINED_DHS_GIS");
var camps = ee.FeatureCollection('users/salem043/ARD/allCampWideV4');

Map.addLayer(dhs);

//Distance filter
var spatialFilter = ee.Filter.withinDistance({
  distance: 80000000000,
  leftField: '.geo',
  rightField: '.geo',
  maxError: 10
});


///////////////////////////////////////////////////////////////////////////////////////////////
//
//N camps 
//
//////////////////////////////////////////////////////////////////////////////////////////////




//2009
var joined_2009 = ee.Join.saveAll({
  matchesKey: 'neighbors', 
  measureKey: 'distance',
  ordering: 'distance'
}).apply({
  primary: dhs, 
  secondary: camps.filterMetadata('open_2009', 'equals', 1), 
  condition: spatialFilter
});


var withNearestDist = joined_2009.map(function(f) {
  var nearestDist = ee.Feature(ee.List(f.get('neighbors')).get(0))
      .get('distance');
  return f.set('nearestDist', nearestDist);
});

var pointdata_withbandcounts_2009 = withNearestDist.map(function(pt) {
  var neighs = ee.List(pt.get('neighbors'));
  var filt = ee.Filter.lt('distance', 5000);
  pt=pt.set('neighsSize05_2009', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 10000);
  pt=pt.set('neighsSize10_2009', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 15000);
  pt=pt.set('neighsSize15_2009', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 20090);
  pt=pt.set('neighsSize20_2009', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 25000);
  pt=pt.set('neighsSize25_2009', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 30000);
  pt=pt.set('neighsSize30_2009', neighs.filter(filt).size());
  return(pt);
});


//2010
var joined_2010 = ee.Join.saveAll({
  matchesKey: 'neighbors', 
  measureKey: 'distance',
  ordering: 'distance'
}).apply({
  primary: pointdata_withbandcounts_2009, 
  secondary: camps.filterMetadata('open_2010', 'equals', 1), 
  condition: spatialFilter
});


var withNearestDist = joined_2010.map(function(f) {
  var nearestDist = ee.Feature(ee.List(f.get('neighbors')).get(0))
      .get('distance');
  return f.set('nearestDist', nearestDist);
});

var pointdata_withbandcounts_2010 = withNearestDist.map(function(pt) {
  var neighs = ee.List(pt.get('neighbors'));
  var filt = ee.Filter.lt('distance', 5000);
  pt=pt.set('neighsSize05_2010', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 10000);
  pt=pt.set('neighsSize10_2010', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 15000);
  pt=pt.set('neighsSize15_2010', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 20100);
  pt=pt.set('neighsSize20_2010', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 25000);
  pt=pt.set('neighsSize25_2010', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 30000);
  pt=pt.set('neighsSize30_2010', neighs.filter(filt).size());
  return(pt);
});


// print(pointdata_withbandcounts_2010.limit(1));


//2011
var joined_2011 = ee.Join.saveAll({
  matchesKey: 'neighbors', 
  measureKey: 'distance',
  ordering: 'distance'
}).apply({
  primary: pointdata_withbandcounts_2010, 
  secondary: camps.filterMetadata('open_2011', 'equals', 1), 
  condition: spatialFilter
});


var withNearestDist = joined_2011.map(function(f) {
  var nearestDist = ee.Feature(ee.List(f.get('neighbors')).get(0))
      .get('distance');
  return f.set('nearestDist', nearestDist);
});

var pointdata_withbandcounts_2011 = withNearestDist.map(function(pt) {
  var neighs = ee.List(pt.get('neighbors'));
  var filt = ee.Filter.lt('distance', 5000);
  pt=pt.set('neighsSize05_2011', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 10000);
  pt=pt.set('neighsSize10_2011', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 15000);
  pt=pt.set('neighsSize15_2011', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 20110);
  pt=pt.set('neighsSize20_2011', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 25000);
  pt=pt.set('neighsSize25_2011', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 30000);
  pt=pt.set('neighsSize30_2011', neighs.filter(filt).size());
  return(pt);
});


//2012
var joined_2012 = ee.Join.saveAll({
  matchesKey: 'neighbors', 
  measureKey: 'distance',
  ordering: 'distance'
}).apply({
  primary: pointdata_withbandcounts_2011, 
  secondary: camps.filterMetadata('open_2012', 'equals', 1), 
  condition: spatialFilter
});


var withNearestDist = joined_2012.map(function(f) {
  var nearestDist = ee.Feature(ee.List(f.get('neighbors')).get(0))
      .get('distance');
  return f.set('nearestDist', nearestDist);
});

var pointdata_withbandcounts_2012 = withNearestDist.map(function(pt) {
  var neighs = ee.List(pt.get('neighbors'));
  var filt = ee.Filter.lt('distance', 5000);
  pt=pt.set('neighsSize05_2012', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 10000);
  pt=pt.set('neighsSize10_2012', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 15000);
  pt=pt.set('neighsSize15_2012', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 20120);
  pt=pt.set('neighsSize20_2012', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 25000);
  pt=pt.set('neighsSize25_2012', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 30000);
  pt=pt.set('neighsSize30_2012', neighs.filter(filt).size());
  return(pt);
});

// print(pointdata_withbandcounts_2012.limit(1));

//2013
var joined_2013 = ee.Join.saveAll({
  matchesKey: 'neighbors', 
  measureKey: 'distance',
  ordering: 'distance'
}).apply({
  primary: pointdata_withbandcounts_2012, 
  secondary: camps.filterMetadata('open_2013', 'equals', 1), 
  condition: spatialFilter
});


var withNearestDist = joined_2013.map(function(f) {
  var nearestDist = ee.Feature(ee.List(f.get('neighbors')).get(0))
      .get('distance');
  return f.set('nearestDist', nearestDist);
});

var pointdata_withbandcounts_2013 = withNearestDist.map(function(pt) {
  var neighs = ee.List(pt.get('neighbors'));
  var filt = ee.Filter.lt('distance', 5000);
  pt=pt.set('neighsSize05_2013', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 10000);
  pt=pt.set('neighsSize10_2013', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 15000);
  pt=pt.set('neighsSize15_2013', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 20130);
  pt=pt.set('neighsSize20_2013', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 25000);
  pt=pt.set('neighsSize25_2013', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 30000);
  pt=pt.set('neighsSize30_2013', neighs.filter(filt).size());
  return(pt);
});


//2014
var joined_2014 = ee.Join.saveAll({
  matchesKey: 'neighbors', 
  measureKey: 'distance',
  ordering: 'distance'
}).apply({
  primary: pointdata_withbandcounts_2013, 
  secondary: camps.filterMetadata('open_2014', 'equals', 1), 
  condition: spatialFilter
});


var withNearestDist = joined_2014.map(function(f) {
  var nearestDist = ee.Feature(ee.List(f.get('neighbors')).get(0))
      .get('distance');
  return f.set('nearestDist', nearestDist);
});

var pointdata_withbandcounts_2014 = withNearestDist.map(function(pt) {
  var neighs = ee.List(pt.get('neighbors'));
  var filt = ee.Filter.lt('distance', 5000);
  pt=pt.set('neighsSize05_2014', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 10000);
  pt=pt.set('neighsSize10_2014', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 15000);
  pt=pt.set('neighsSize15_2014', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 20140);
  pt=pt.set('neighsSize20_2014', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 25000);
  pt=pt.set('neighsSize25_2014', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 30000);
  pt=pt.set('neighsSize30_2014', neighs.filter(filt).size());
  return(pt);
});



//2015
var joined_2015 = ee.Join.saveAll({
  matchesKey: 'neighbors', 
  measureKey: 'distance',
  ordering: 'distance'
}).apply({
  primary: pointdata_withbandcounts_2014, 
  secondary: camps.filterMetadata('open_2015', 'equals', 1), 
  condition: spatialFilter
});


var withNearestDist = joined_2015.map(function(f) {
  var nearestDist = ee.Feature(ee.List(f.get('neighbors')).get(0))
      .get('distance');
  return f.set('nearestDist', nearestDist);
});

var pointdata_withbandcounts_2015 = withNearestDist.map(function(pt) {
  var neighs = ee.List(pt.get('neighbors'));
  var filt = ee.Filter.lt('distance', 5000);
  pt=pt.set('neighsSize05_2015', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 10000);
  pt=pt.set('neighsSize10_2015', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 15000);
  pt=pt.set('neighsSize15_2015', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 20150);
  pt=pt.set('neighsSize20_2015', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 25000);
  pt=pt.set('neighsSize25_2015', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 30000);
  pt=pt.set('neighsSize30_2015', neighs.filter(filt).size());
  return(pt);
});

print(pointdata_withbandcounts_2015.limit(1));

//2016
var joined_2016 = ee.Join.saveAll({
  matchesKey: 'neighbors', 
  measureKey: 'distance',
  ordering: 'distance'
}).apply({
  primary: pointdata_withbandcounts_2015, 
  secondary: camps.filterMetadata('open_2016', 'equals', 1), 
  condition: spatialFilter
});


var withNearestDist = joined_2016.map(function(f) {
  var nearestDist = ee.Feature(ee.List(f.get('neighbors')).get(0))
      .get('distance');
  return f.set('nearestDist', nearestDist);
});

var pointdata_withbandcounts_2016 = withNearestDist.map(function(pt) {
  var neighs = ee.List(pt.get('neighbors'));
  var filt = ee.Filter.lt('distance', 5000);
  pt=pt.set('neighsSize05_2016', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 10000);
  pt=pt.set('neighsSize10_2016', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 15000);
  pt=pt.set('neighsSize15_2016', neighs.filter(filt).size());
  filt = ee.Filter.lt('distance', 20160);
  pt=pt.set('neighsSize20_2016', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 25000);
  pt=pt.set('neighsSize25_2016', neighs.filter(filt).size());
    filt = ee.Filter.lt('distance', 30000);
  pt=pt.set('neighsSize30_2016', neighs.filter(filt).size());
  return(pt);
});



Export.table.toDrive(pointdata_withbandcounts_2016, "DHSCampProximity_2", "NutritionPaper");
print(pointdata_withbandcounts_2016.limit(2));

