//Per capita deforestation rates
//Colette Salemi
//Extension of Refugee Camps and Deforestation project


//Country shapefiles
var countries = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017');
var Africa = countries.filter(ee.Filter.eq('wld_rgn', 'Africa'));
Map.addLayer(Africa);

print("African continent", Africa);
//Hansen Global Forest Change image with multiple bands
var gfc2014 = ee.Image('UMD/hansen/global_forest_change_2015').clip(Africa);

//Population data image collection
var Allpop = ee.ImageCollection("WorldPop/GP/100m/pop")
  .filterDate('2000', '2012');

///////////////////////////////////////////////////////////////////////////
//Build a forest loss panel
///////////////////////////////////////////////////////////////////////////

var lossImage = gfc2014.select(['loss']); //Raster of pixels lost 2000-2014
//loss quantified in terms of square meters lost
var lossAreaImage = lossImage.multiply(ee.Image.pixelArea()); 
Map.addLayer(lossAreaImage);

//Identifies the year in which the pixel transitioned
var lossYear = gfc2014.select(['lossyear']);

var lossByYear = lossAreaImage.addBands(lossYear) 
  .reduceRegions({ 
  reducer: ee.Reducer.sum().group({groupField: 1}),
  collection: Africa, 
  scale: 30
});

print("loss by country and year", lossByYear);

var addGroups = function(feature) {
  var statsFormatted = ee.List(feature.get('groups'))
  .map(function(el) {
    var d = ee.Dictionary(el);
    return [ee.Number(d.get('group')).format("20%02d"), d.get('sum')];
  });
  var statsDictionary = ee.Dictionary(statsFormatted.flatten());

  return feature.set(statsDictionary);
};

print(lossByYear.map(addGroups))
lossByYear = lossByYear.map(addGroups)
///////////////////////////////////////////////////////////////////////////
//Population estimate panel
///////////////////////////////////////////////////////////////////////////

function newCollectionToImage(collection){
var stack = ee.Image(collection.iterate(function(img, prev) {
return ee.Image(prev).addBands(img);
}, ee.Image(1)));
 
stack = stack.select(ee.List.sequence(1, stack.bandNames().size().subtract(1)));
return stack;
}

var tch = Allpop.map(function(img){
var y = ee.String(ee.Date(img.get('system:time_start')).get("year"));
return img.set("year",y).rename(y);
});

var tchImg = newCollectionToImage(tch).clip(Africa);
var pop_img=tchImg;

var countrypop = pop_img.reduceRegions(Africa,ee.Reducer.sum());

print("Population dataframe", countrypop);


//Exporting
Export.table.toDrive(countrypop, "Annual_pop");
Export.table.toDrive(lossByYear, "Annual_forest_loss");


